# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
ComponentDefinitions:
  cmp_Menu_Vertical:
    DefinitionType: CanvasComponent
    Description: SideMenu Component Example
    AccessAppScope: true
    CustomProperties:
      ControlsTheme:
        PropertyKind: Input
        DisplayName: ControlsTheme
        Description: A record of values passed in with control-level Specifics
        DataType: Record
        Default: "=// PASTE THE NAME OF YOUR THEME RECORD HERE - ie 'ControlsTheme'\r\n// ONLY EXPANDED BELOW DUE TO COMPONENT REQUIREMENT\r\n//\r\n// You can either pass a record in below that contains the values or the record itself.\r\n// If you are listing values, you do not need to input all records, only the used ones.\r\n//\r\n{\r\n    ButtonColor:                    cmp_Menu_Vertical.ThisTheme.Color2Text,\r\n    ButtonFill:                     cmp_Menu_Vertical.ThisTheme.Color2,\r\n    ButtonBorderColor:              cmp_Menu_Vertical.ThisTheme.Color1,\r\n    ButtonHoverColor:               ColorFade(cmp_Menu_Vertical.ThisTheme.Color2Text, 20%),\r\n    ButtonHoverFill:                ColorFade(cmp_Menu_Vertical.ThisTheme.Color2,     20%),\r\n    ButtonHoverBorderColor:         ColorFade(cmp_Menu_Vertical.ThisTheme.Color1,     20%),\r\n    ButtonPressedColor:             cmp_Menu_Vertical.ThisTheme.Color2,\r\n    ButtonPressedFill:              cmp_Menu_Vertical.ThisTheme.Color2Text,\r\n    ButtonPressedBorderColor:       cmp_Menu_Vertical.ThisTheme.Color2,\r\n    ButtonFont:                     cmp_Menu_Vertical.ThisTheme.Font,\r\n    ButtonFontSize:                 cmp_Menu_Vertical.FontSizes.TextEmphasis,\r\n    \r\n    ImageFill:                      Color.Transparent,\r\n    ImageBorderColor:               Color.Transparent,\r\n    ImageHoverFill:                 Color.Transparent,\r\n    ImageHoverBorderColor:          Color.Transparent,\r\n    ImagePressedFill:               Color.Transparent,\r\n    ImagePressedBorderColor:        Color.Transparent,\r\n\r\n    GalleryFill:                    RGBA(0,0,0,0),\r\n    GalleryBorderColor:             cmp_Menu_Vertical.ThisTheme.Color2,\r\n\r\n    IconFill:                       cmp_Menu_Vertical.ThisTheme.Color3,\r\n    IconHoverFill:                  cmp_Menu_Vertical.ThisTheme.Color2Text,\r\n    IconPressedFill:                cmp_Menu_Vertical.ThisTheme.Color1Text,\r\n    IconBackground:                 RGBA(0,0,0,0),\r\n    IconHoverBackground:            cmp_Menu_Vertical.ThisTheme.Color2,\r\n    IconPressedBackground:          cmp_Menu_Vertical.ThisTheme.Color1,\r\n    IconBorderColor:                ColorFade(cmp_Menu_Vertical.ThisTheme.Color3, -20%),\r\n    IconHoverBorderColor:           cmp_Menu_Vertical.ThisTheme.Color3,\r\n    IconPressedBorderColor:         ColorFade(cmp_Menu_Vertical.ThisTheme.Color3, -40%)\r\n}"
      Flat:
        PropertyKind: Input
        DisplayName: Flat
        Description: Determines if drop-shadow is visible
        DataType: Boolean
        Default: =false
      FontSizes:
        PropertyKind: Input
        DisplayName: FontSizes
        Description: A record of values passed into the component
        DataType: Record
        Default: |-
          =// PASTE THE NAME OF YOUR FONT SIZES RECORD HERE - ie 'FontSizes'
          // ONLY EXPANDED BELOW DUE TO COMPONENT REQUIREMENT
          {
              TextMain:                       cmp_Menu_Vertical.ThisTheme.FontSize -1,
              TextEmphasis:                   cmp_Menu_Vertical.ThisTheme.FontSize +1,
              Content:                        cmp_Menu_Vertical.ThisTheme.FontSize +2,
              Title:                          cmp_Menu_Vertical.ThisTheme.FontSize +6,
              SubTitle:                       cmp_Menu_Vertical.ThisTheme.FontSize +4,
              AddPicture:                     cmp_Menu_Vertical.ThisTheme.FontSize -3
          }
      ItemsList:
        PropertyKind: Input
        DisplayName: ItemsList
        Description: A Table of items to be displayed
        RaiseOnReset: true
        DataType: Table
        Default: "=// PASTE THE NAME OF YOUR MENU TABLE HERE - ie 'MenuItems'\r\n// ONLY EXPANDED BELOW DUE TO COMPONENT REQUIREMENT\r\n//\r\n// You can either pass a table in below that contains the values or the table itself.\r\n// If you are listing values, you do not need to input all records within the table, only the used ones.\r\n// ie below I have only passed in the values used by my component\r\nTable(\r\n     {\r\n         Name:    \"Home\",\r\n         Tooltip: \"Click here to return to the Home Screen\",\r\n         Icon:    Icon.Home,\r\n         Screen: App.ActiveScreen\r\n     },\r\n     {\r\n         Name:    \"New\",\r\n         Tooltip: \"Click here to create a New Item\",\r\n         Icon:    Icon.Add,\r\n         Screen: App.ActiveScreen\r\n     },\r\n     {\r\n         Name:    \"Settings\",\r\n         Tooltip: \"Click here to access the App Settings\",\r\n         Icon:    Icon.Settings,\r\n         Screen: App.ActiveScreen\r\n     }\r\n     \r\n)"
      TabHighlightColor:
        PropertyKind: Input
        DisplayName: TabHighlightColor
        Description: 'A text hex value in format #XXXXXX'
        DataType: Text
        Default: ="#FFFFFF"
      ThisTheme:
        PropertyKind: Input
        DisplayName: ThisTheme
        Description: A list of required theme items passed in from the template
        DataType: Record
        Default: |-
          =// PASTE THE NAME OF YOUR THEME RECORD HERE - ie 'ThisTheme'
          // ONLY EXPANDED BELOW DUE TO COMPONENT REQUIREMENT
          //
          // You can either pass a record in below that contains the values or the record itself.
          // If you are listing values, you do not need to input all records, only the used ones.
          // ie below I have only passed in the values used by my component
          {
                  Color1:                    RGBA(186, 202, 226, 1),
                  Color2:                    RGBA( 56,  96, 178, 1),
                  Color3:                    RGBA(  0,  18, 107, 1),
                  Color1Text:                RGBA( 15,  15,  15, 1),
                  Color2Text:                RGBA(245, 245, 245, 1),
                  Color3Text:                RGBA(245, 245, 245, 1),
                  Font:                      Font.'Segoe UI',
                  FontSize:                  14,
                  DarkMode:                  false
          }
    Properties:
      Width: =123
    Children:
      - html_BackgroundPanelDropshadow_cmp_Menu:
          Control: HtmlViewer@2.1.0
          Properties:
            DisabledBorderColor: =RGBA(56, 56, 56, 1)
            Font: =Font.'Open Sans'
            Height: =Parent.Height
            HtmlText: |-
              =If(cmp_Menu_Vertical.Flat,
                 "",
                 "<div style='
                      margin: 0px;
                      width: " & Parent.Width  -RoundDown(btn_MiddlePanel_cmpMenu.X,0) 
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0) 
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               & "px;
                      height: " & Parent.Height-RoundDown(btn_MiddlePanel_cmpMenu.X,0) 
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0) 
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               -RoundDown(btn_MiddlePanel_cmpMenu.X,0)
                                               & "px;
                      border-radius: 10px;
                      box-shadow: " & RoundDown(btn_MiddlePanel_cmpMenu.X,0) & "px "
                                    & RoundDown(btn_MiddlePanel_cmpMenu.X,0) & "px "
                                    & RoundDown(btn_MiddlePanel_cmpMenu.X,0) & "px "
                                    & If(cmp_Menu_Vertical.ThisTheme.DarkMode, "#CCCCCC" , "#444444") & "'>
                  </div>"
              )
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =!cmp_Menu_Vertical.Flat
            Width: =Parent.Width
            X: =0*0
            Y: =0*0
      - btn_MiddlePanel_cmpMenu:
          Control: Classic/Button@2.2.0
          Properties:
            BorderColor: =cmp_Menu_Vertical.ControlsTheme.ButtonBorderColor
            BorderThickness: =If(cmp_Menu_Vertical.Flat, 0, 2)
            Color: =cmp_Menu_Vertical.ControlsTheme.ButtonColor
            DisabledBorderColor: =RGBA(166, 166, 166, 1)
            Fill: =cmp_Menu_Vertical.ControlsTheme.ButtonFill
            Font: =cmp_Menu_Vertical.ControlsTheme.ButtonFont
            Height: =MenuGallery_Vert.Height
            HoverBorderColor: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverBorderColor
            HoverColor: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverColor
            HoverFill: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverFill
            PressedBorderColor: =cmp_Menu_Vertical.ControlsTheme.ButtonPressedBorderColor
            PressedColor: =cmp_Menu_Vertical.ControlsTheme.ButtonPressedColor
            PressedFill: =cmp_Menu_Vertical.ControlsTheme.ButtonPressedFill
            Size: =cmp_Menu_Vertical.ControlsTheme.ButtonFontSize
            TabIndex: =-1
            Text: =""
            Width: =MenuGallery_Vert.Width
            X: =MenuGallery_Vert.X
            Y: =MenuGallery_Vert.Y
      - MenuGallery_Vert:
          Control: Gallery@2.15.0
          Variant: BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0
          Properties:
            AccessibleLabel: ="vertical navigation gallery for screens"
            BorderColor: =cmp_Menu_Vertical.ControlsTheme.GalleryBorderColor
            DelayItemLoading: =false
            Fill: =cmp_Menu_Vertical.ControlsTheme.GalleryFill
            Height: =Parent.Height-If(cmp_Menu_Vertical.Flat, 0, (Self.X*4))
            Items: =cmp_Menu_Vertical.ItemsList
            LoadingSpinner: =LoadingSpinner.None
            ShowScrollbar: =false
            TemplateSize: =If(CountRows(cmp_Menu_Vertical.ItemsList)>0, Self.Height/(CountRows(cmp_Menu_Vertical.ItemsList)), 1)
            Width: =Parent.Width-If(cmp_Menu_Vertical.Flat, 0, (Self.X*4))
            X: =If(cmp_Menu_Vertical.Flat, 0, RoundDown(Max(Parent.Width*0.3%, Parent.Height*0.6%),0) )
            Y: =Self.X
          Children:
            - btn_SelectedItem_MenuGallery_Vert:
                Control: Classic/Button@2.2.0
                Properties:
                  BorderColor: =Color.Transparent
                  Color: =Color.Transparent
                  DisabledBorderColor: =RGBA(166, 166, 166, 1)
                  DisplayMode: =DisplayMode.View
                  Fill: =ColorValue(cmp_Menu_Vertical.TabHighlightColor)
                  Font: =Font.'Segoe UI'
                  Height: =RoundDown((Parent.TemplateHeight) * 80%, 0)
                  HoverBorderColor: =Color.Transparent
                  HoverColor: =Color.Transparent
                  HoverFill: =Color.Transparent
                  OnSelect: =
                  PressedBorderColor: =Color.Transparent
                  PressedColor: =Color.Transparent
                  PressedFill: =Color.Transparent
                  Size: =14
                  TabIndex: =-1
                  Visible: =App.ActiveScreen = ThisItem.Screen
                  Width: =RoundDown((Parent.TemplateWidth) * 5%, 0)
                  X: =RoundDown((Parent.TemplateWidth) * 10%, 0)
                  Y: =RoundDown((Parent.TemplateHeight) * 10%, 0)
            - ico_MenuIcon_Vert:
                Control: Classic/Icon@2.5.0
                Properties:
                  AccessibleLabel: ="navigate to " & ThisItem.Name
                  BorderColor: =cmp_Menu_Vertical.ControlsTheme.IconBorderColor
                  Color: =cmp_Menu_Vertical.ControlsTheme.ButtonColor
                  DisabledFill: =ColorFade(Self.Fill, -80%)
                  DisplayMode: =If(App.ActiveScreen = ThisItem.Screen, DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =cmp_Menu_Vertical.ControlsTheme.IconBackground
                  Height: =Parent.TemplateHeight * 90%
                  HoverBorderColor: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverBorderColor
                  HoverColor: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverColor
                  HoverFill: =cmp_Menu_Vertical.ControlsTheme.ButtonHoverFill
                  Icon: =ThisItem.Icon
                  OnSelect: |-
                    =//Select this item
                    Select(Parent);
                    //perform some other action?
                    //
                    //then navigate to screen
                    Navigate(ThisItem.Screen);
                  PaddingBottom: =(Parent.TemplateHeight) * 15%
                  PaddingLeft: =(Parent.TemplateWidth) * 15%
                  PaddingRight: =(Parent.TemplateWidth) * 15%
                  PaddingTop: =(Parent.TemplateHeight) * 15%
                  PressedBorderColor: =cmp_Menu_Vertical.ControlsTheme.IconPressedBorderColor
                  PressedColor: =cmp_Menu_Vertical.ControlsTheme.IconPressedFill
                  PressedFill: =cmp_Menu_Vertical.ControlsTheme.IconPressedBackground
                  TabIndex: =0
                  Tooltip: =ThisItem.Tooltip
                  Width: =Parent.TemplateWidth *90%
                  X: =(Parent.TemplateWidth-Self.Width) * 50%
                  Y: =(Parent.TemplateHeight - Self.Height) * 50%
